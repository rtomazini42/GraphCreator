unit Barras;

interface

uses
  System.SysUtils, System.Types, System.UITypes, System.Classes, System.Variants, 
  FMX.Types, FMX.Graphics, FMX.Controls, FMX.Forms, FMX.Dialogs, FMX.StdCtrls,
  FMX.Objects, FMX.Controls.Presentation, FMX.Layouts;

type
  TFrameBarras = class(TFrame)
    Rectangle1: TRectangle;
    Conteudo: TLayout;
    Regua: TLayout;
    Line1: TLine;
    RectBar: TRectangle;
    barraLay: TLayout;
    EtiquetaLbl: TLabel;
    procedure CriarBarra(etiqueta: String; valor: Double);
    procedure LimparBarras;
  private
    { Private declarations }
  public
    { Public declarations }
  end;

implementation

{$R *.fmx}

{ TFrameBarras }


procedure TFrameBarras.CriarBarra(etiqueta: String; valor: Double);
var
  NovaBarraLay: TLayout;
  NovaEtiquetaLbl: TLabel;
  NovaRectBar: TRectangle;
begin
  // Crie uma nova instância do barraLay
  NovaBarraLay := TLayout.Create(Self);
  NovaBarraLay.Parent := Conteudo;
  NovaBarraLay.Align := TAlignLayout.left;

  // Crie uma nova etiqueta para a barra
  NovaEtiquetaLbl := TLabel.Create(NovaBarraLay);
  NovaEtiquetaLbl.Parent := NovaBarraLay;
  NovaEtiquetaLbl.Text := etiqueta;
  NovaEtiquetaLbl.Align := TAlignLayout.Vertical;

  // Crie uma nova barra retangular
  NovaRectBar := TRectangle.Create(NovaBarraLay);
  NovaRectBar.Align := TAlignLayout.Bottom;
  NovaRectBar.Parent := NovaBarraLay;
  NovaRectBar.Height := Round(valor); // Defina a altura da barra conforme necessário
  NovaRectBar.Fill.Color := TAlphaColors.blue; // Defina a cor da barra conforme necessário
  NovaRectBar.Width :=  30; // Defina a largura da barra com base no valor
end;


procedure TFrameBarras.LimparBarras;
var
  i: Integer;
begin
  // Percorra todos os componentes em Conteudo e remova as barras
  for i := Conteudo.ControlsCount - 1 downto 0 do
  begin
    if Conteudo.Controls[i] is TLayout then
    begin
      Conteudo.Controls[i].Free;
    end;
  end;
end;



end.
